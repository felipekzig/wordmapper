
package dict.service_client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.5-b04 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "DictServiceSoap", targetNamespace = "http://services.aonaware.com/webservices/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DictServiceSoap {


    /**
     * Show remote server information
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ServerInfo", action = "http://services.aonaware.com/webservices/ServerInfo")
    @WebResult(name = "ServerInfoResult", targetNamespace = "http://services.aonaware.com/webservices/")
    @RequestWrapper(localName = "ServerInfo", targetNamespace = "http://services.aonaware.com/webservices/", className = "dict.service_client.ServerInfo")
    @ResponseWrapper(localName = "ServerInfoResponse", targetNamespace = "http://services.aonaware.com/webservices/", className = "dict.service_client.ServerInfoResponse")
    public String serverInfo();

    /**
     * Returns a list of available dictionaries
     * 
     * @return
     *     returns dict.service_client.ArrayOfDictionary
     */
    @WebMethod(operationName = "DictionaryList", action = "http://services.aonaware.com/webservices/DictionaryList")
    @WebResult(name = "DictionaryListResult", targetNamespace = "http://services.aonaware.com/webservices/")
    @RequestWrapper(localName = "DictionaryList", targetNamespace = "http://services.aonaware.com/webservices/", className = "dict.service_client.DictionaryList")
    @ResponseWrapper(localName = "DictionaryListResponse", targetNamespace = "http://services.aonaware.com/webservices/", className = "dict.service_client.DictionaryListResponse")
    public ArrayOfDictionary dictionaryList();

    /**
     * Returns a list of advanced dictionaries (e.g. translating dictionaries)
     * 
     * @return
     *     returns dict.service_client.ArrayOfDictionary
     */
    @WebMethod(operationName = "DictionaryListExtended", action = "http://services.aonaware.com/webservices/DictionaryListExtended")
    @WebResult(name = "DictionaryListExtendedResult", targetNamespace = "http://services.aonaware.com/webservices/")
    @RequestWrapper(localName = "DictionaryListExtended", targetNamespace = "http://services.aonaware.com/webservices/", className = "dict.service_client.DictionaryListExtended")
    @ResponseWrapper(localName = "DictionaryListExtendedResponse", targetNamespace = "http://services.aonaware.com/webservices/", className = "dict.service_client.DictionaryListExtendedResponse")
    public ArrayOfDictionary dictionaryListExtended();

    /**
     * Show information about the specified dictionary
     * 
     * @param dictId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "DictionaryInfo", action = "http://services.aonaware.com/webservices/DictionaryInfo")
    @WebResult(name = "DictionaryInfoResult", targetNamespace = "http://services.aonaware.com/webservices/")
    @RequestWrapper(localName = "DictionaryInfo", targetNamespace = "http://services.aonaware.com/webservices/", className = "dict.service_client.DictionaryInfo")
    @ResponseWrapper(localName = "DictionaryInfoResponse", targetNamespace = "http://services.aonaware.com/webservices/", className = "dict.service_client.DictionaryInfoResponse")
    public String dictionaryInfo(
        @WebParam(name = "dictId", targetNamespace = "http://services.aonaware.com/webservices/")
        String dictId);

    /**
     * Define given word, returning definitions from all dictionaries
     * 
     * @param word
     * @return
     *     returns dict.service_client.WordDefinition
     */
    @WebMethod(operationName = "Define", action = "http://services.aonaware.com/webservices/Define")
    @WebResult(name = "DefineResult", targetNamespace = "http://services.aonaware.com/webservices/")
    @RequestWrapper(localName = "Define", targetNamespace = "http://services.aonaware.com/webservices/", className = "dict.service_client.Define")
    @ResponseWrapper(localName = "DefineResponse", targetNamespace = "http://services.aonaware.com/webservices/", className = "dict.service_client.DefineResponse")
    public WordDefinition define(
        @WebParam(name = "word", targetNamespace = "http://services.aonaware.com/webservices/")
        String word);

    /**
     * Define given word, returning definitions from specified dictionary
     * 
     * @param dictId
     * @param word
     * @return
     *     returns dict.service_client.WordDefinition
     */
    @WebMethod(operationName = "DefineInDict", action = "http://services.aonaware.com/webservices/DefineInDict")
    @WebResult(name = "DefineInDictResult", targetNamespace = "http://services.aonaware.com/webservices/")
    @RequestWrapper(localName = "DefineInDict", targetNamespace = "http://services.aonaware.com/webservices/", className = "dict.service_client.DefineInDict")
    @ResponseWrapper(localName = "DefineInDictResponse", targetNamespace = "http://services.aonaware.com/webservices/", className = "dict.service_client.DefineInDictResponse")
    public WordDefinition defineInDict(
        @WebParam(name = "dictId", targetNamespace = "http://services.aonaware.com/webservices/")
        String dictId,
        @WebParam(name = "word", targetNamespace = "http://services.aonaware.com/webservices/")
        String word);

    /**
     * Return list of all available strategies on the server
     * 
     * @return
     *     returns dict.service_client.ArrayOfStrategy
     */
    @WebMethod(operationName = "StrategyList", action = "http://services.aonaware.com/webservices/StrategyList")
    @WebResult(name = "StrategyListResult", targetNamespace = "http://services.aonaware.com/webservices/")
    @RequestWrapper(localName = "StrategyList", targetNamespace = "http://services.aonaware.com/webservices/", className = "dict.service_client.StrategyList")
    @ResponseWrapper(localName = "StrategyListResponse", targetNamespace = "http://services.aonaware.com/webservices/", className = "dict.service_client.StrategyListResponse")
    public ArrayOfStrategy strategyList();

    /**
     * Look for matching words in all dictionaries using the given strategy
     * 
     * @param strategy
     * @param word
     * @return
     *     returns dict.service_client.ArrayOfDictionaryWord
     */
    @WebMethod(operationName = "Match", action = "http://services.aonaware.com/webservices/Match")
    @WebResult(name = "MatchResult", targetNamespace = "http://services.aonaware.com/webservices/")
    @RequestWrapper(localName = "Match", targetNamespace = "http://services.aonaware.com/webservices/", className = "dict.service_client.Match")
    @ResponseWrapper(localName = "MatchResponse", targetNamespace = "http://services.aonaware.com/webservices/", className = "dict.service_client.MatchResponse")
    public ArrayOfDictionaryWord match(
        @WebParam(name = "word", targetNamespace = "http://services.aonaware.com/webservices/")
        String word,
        @WebParam(name = "strategy", targetNamespace = "http://services.aonaware.com/webservices/")
        String strategy);

    /**
     * Look for matching words in the specified dictionary using the given strategy
     * 
     * @param dictId
     * @param strategy
     * @param word
     * @return
     *     returns dict.service_client.ArrayOfDictionaryWord
     */
    @WebMethod(operationName = "MatchInDict", action = "http://services.aonaware.com/webservices/MatchInDict")
    @WebResult(name = "MatchInDictResult", targetNamespace = "http://services.aonaware.com/webservices/")
    @RequestWrapper(localName = "MatchInDict", targetNamespace = "http://services.aonaware.com/webservices/", className = "dict.service_client.MatchInDict")
    @ResponseWrapper(localName = "MatchInDictResponse", targetNamespace = "http://services.aonaware.com/webservices/", className = "dict.service_client.MatchInDictResponse")
    public ArrayOfDictionaryWord matchInDict(
        @WebParam(name = "dictId", targetNamespace = "http://services.aonaware.com/webservices/")
        String dictId,
        @WebParam(name = "word", targetNamespace = "http://services.aonaware.com/webservices/")
        String word,
        @WebParam(name = "strategy", targetNamespace = "http://services.aonaware.com/webservices/")
        String strategy);

}
